#!/bin/bash

# ---------------------------------------------------------------------------- #
# GLOBAL VARIABLES (in script)                                                 #
# ---------------------------------------------------------------------------- #

# red output
RED='\033[0;31m'
# green output
GREEN='\033[0;32m'
# Yellow output
YELLOW='\033[0;33m'
# No Color
NC='\033[0m'
CONFDIR="/opt/websitemanager"

# ---------------------------------------------------------------------------- #
# FUNCTIONS                                                                    #
# ---------------------------------------------------------------------------- #

#
# Echoes a red message
#
echo-red() {
    echo -e "${RED}$1${NC}"
}

#
# Echoes a green message
#
echo-green() {
    echo -e "${GREEN}$1${NC}"
}

#
# Echoes a yellow message
#
echo-yellow() {
    echo -e "${YELLOW}$1${NC}"
}




#
# Verifies sudo 
#
systemmanager-verify-sudo() {

    if [ "$EUID" -ne 0 ]
      then echo-red "Please execute as root eg: sudo"
      echo-red "else contact server administrator"	    
      exit 1
    fi

}

systemmanager-install() {
    systemmanager-verify-sudo;

    if [ ! -e  "$CONFDIR" ]; then
        mkdir "$CONFDIR"
    fi

    #cp template.conf template-phpfpm.conf template-pool.conf $CONFDIR
    cp -r $(pwd)/. $CONFDIR
    ln -s -f $CONFDIR/websitemanager /usr/bin/websitemanager
    ln -s -f $CONFDIR/systemmanager /usr/bin/systemmanager
    echo-green "Script installed! use: systemmanager and websitemanager"
}
#
# Shows info on the authors and the program
#
systemmanager-credits() {

    echo -e "${GREEN}"
    cat <<splash
##############################################################################
##############################################################################
##systemmanager v1.9.0 Created by LKY Rajpurohit <qualdev.laxman@gmail.com>###
##############################################################################
##############################################################################
splash
    echo -e "${NC}"

}
systemmanager-credits;
systemmanager-install;

apt update
commonpkg="git unzip bind9 filezilla cifs-utils resolvconf openssh-server composer git build-essential libtool autoconf software-properties-common curl wget gcc g++ make dirmngr apt-transport-https"

apt install -y $commonpkg
add-apt-repository ppa:ondrej/apache2 -y
add-apt-repository ppa:ondrej/php -y

echo-red "Would you like to upgrade mariadb y/n" 
read mariadb 
if [ $mariadb = 'y' ];then
echo-green "removing database package and installing mariadb"
apt remove mysql-*
apt remove mariadb*

HEIGHT=15
WIDTH=40
CHOICE_HEIGHT=4
BACKTITLE="Mariadb"
TITLE="Select version"
MENU="Choose one of the following options:"

OPTIONS=(1 "Mariadb 10.4"
         2 "Mariadb 10.5"
         3 "Mariadb 10.6"
         4 "Mariadb 10.7"
         5 "Mariadb 10.8"
         6 "Mariadb 10.9"
         7 "Mariadb 10.10"
         8 "Mariadb 10.11"
        

CHOICE=$(dialog --clear \
                --backtitle "$BACKTITLE" \
                --title "$TITLE" \
                --menu "$MENU" \
                $HEIGHT $WIDTH $CHOICE_HEIGHT \
                "${OPTIONS[@]}" \
                2>&1 >/dev/tty)

clear
case $CHOICE in
        1)
            dbv = 4
            ;;
        2)
            dbv = 5
            ;;
        3)
            dbv = 6
            ;;
        4)
            dbv = 7
            ;;
        5)
            dbv = 8
            ;;
        6)
            dbv = 9
            ;;
        7)
            dbv = 10
            ;;
        8)
            dbv = 11
            ;;
esac
fi

curl -LsS https://r.mariadb.com/downloads/mariadb_repo_setup | sudo bash -s -- --mariadb-server-version="mariadb-10.$dbv"
databasepkg="mariadb-client mariadb-server"

apt install -y $databasepkg apache2 apache2-utils libapache2-mpm-itk openssl php5.6-fpm php5.6-{curl,common,xml,bcmath,bz2,intl,gd,mbstring,mysql,zip,json} php7.0-fpm  php7.0-{curl,common,xml,bcmath,bz2,intl,gd,mbstring,mysql,zip,json} php7.1-fpm php7.1-{curl,common,xml,bcmath,bz2,intl,gd,mbstring,mysql,zip,json} php7.2 php7.2-fpm php7.2-{curl,common,xml,bcmath,bz2,intl,gd,mbstring,mysql,zip,json} php7.3-fpm php7.3-{curl,common,xml,bcmath,bz2,intl,gd,mbstring,mysql,zip,json} php7.4-fpm php7.4-{curl,common,xml,bcmath,bz2,intl,gd,mbstring,mysql,zip,json} php8.0-fpm php8.0-{curl,common,xml,bcmath,bz2,intl,gd,mbstring,mysql,zip} php8.2-fpm php8.2-{curl,common,xml,bcmath,bz2,intl,gd,mbstring,mysql,zip} 
touch /etc/apache2/conf-available/php-fpm.conf
cat << EOT >  /etc/apache2/conf-available/php-fpm.conf
<IfModule mod_fastcgi.c>
        AddHandler php7-fcgi .phpphp8.1-fpm php8.1-{curl,common,xml,bcmath,bz2,intl,gd,mbstring,mysql,zip}
        Action php7-fcgi /php7-fcgi
        Alias /php7-fcgi /usr/lib/cgi-bin/php7-fcgi
        FastCgiExternalServer /usr/lib/cgi-bin/php7-fcgi -socket /run/php/php8.0-fpm.sock -pass-header Authorization -idle-timeout 600
        <Directory /usr/lib/cgi-bin>
                Require all granted
        </Directory>
</IfModule>
EOT
a2enmod "proxy proxy_fcgi setenvif actions alias auth_basic env expires headers http2 mime ssl rewrite request mpm_itk"
a2enconf  "php-fpm php5.6-fpm php7.0-fpm php7.1-fpm  php7.2-fpm php7.3-fpm php7.4-fpm php8.0-fpm php8.1-fpm php8.2-fpm"

for i in 5.6 7.0 7.1 7.2 7.3 7.4 8.0 8.1 8.2
do
cp $CONFDIR/phpini-templates/php$i.conf /etc/php/$i/fpm/php.ini
rm -f /etc/php/$i/fpm/pool.d/www.conf
done

sed -i '/#<Directory/i \
<Directory /home/*/public_html/> \
Options Indexes FollowSymLinks \
AllowOverride ALL \
Require all granted \
</Directory>' /etc/apache2/apache2.conf

curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar > /dev/null 2>&1
chmod +x wp-cli.phar
mv wp-cli.phar '/usr/local/bin/wp'
mkdir -p /etc/ssl/selfsigned
cp "$CONFDIR/openssl/ca-bundle.pem" "/etc/ssl/selfsigned/ca-bundle.pem"
chmod +x "$CONFDIR/openssl/getcert.sh"
##############################################################################################################################################
echo-green "setup phpmyadmin ..."
rm -rf /usr/share/phpmyadmin
mkdir -p /usr/share/phpmyadmin
wget https://files.phpmyadmin.net/phpMyAdmin/5.2.0/phpMyAdmin-5.2.0-all-languages.zip -O /usr/share/phpmyadmin/phpmyadmin5.2.0.zip

cd /usr/share/phpmyadmin/ && unzip -qq phpmyadmin5.2.0.zip&& mv phpMyAdmin-5.2.0-all-languages/* .
cp /usr/share/phpmyadmin/config.sample.inc.php /usr/share/phpmyadmin/config.inc.php
cp $CONFDIR/phpini-templates/default-php-fpm.conf /etc/php/8.0/fpm/pool.d/default-php-fpm.conf

touch /etc/apache2/conf-available/phpmyadmin.conf
cat << EOT > /etc/apache2/conf-available/phpmyadmin.conf
Alias /phpmyadmin /usr/share/phpmyadmin

<Directory /usr/share/phpmyadmin>
    Options FollowSymLinks
    DirectoryIndex index.php
    AllowOverride all
    <FilesMatch \.php$>
                SetHandler "proxy:unix:/run/php/php8.0-fpm.sock|fcgi://localhost"
    </FilesMatch>
</Directory>
<Directory /usr/share/phpmyadmin/setup>
    Require all denied
</Directory>

<Directory /usr/share/phpmyadmin/libraries>
    Require all denied
</Directory>
EOT
a2enconf phpmyadmin
#################################################################################################################################################
echo-green "add mysql user for mysql/mariadb"
mysql -e "GRANT ALL PRIVILEGES ON *.* TO 'qualdev'@'localhost' IDENTIFIED BY 'P@q2w3efg';"
mysql -e "FLUSH PRIVILEGES;"

echo-green "Change default php version 8.0 for cli"
update-alternatives --set php /usr/bin/php8.0
#==================================================================================================================================================
echo-green "Removing composer v1 and installing v2 "
rm -rf /usr/local/bin/composer && rm -rf /usr/bin/composer
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'composer-setup.php') === 'e21205b207c3ff031906575712edab6f13eb0b361f2085f1f1237b7126d785e826a450292b6cfd1d64d92e6563bbde02') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
php composer-setup.php
php -r "unlink('composer-setup.php');"
sudo mv composer.phar /usr/bin/composer
#==================================================================================================================================================
echo-green "setup dns server"
systemctl disable systemd-resolved.service
systemctl stop systemd-resolved.service
unlink /etc/resolv.conf
touch  /etc/resolv.conf
echo "nameserver 192.168.0.5" > /etc/resolv.conf
echo "nameserver 1.1.1.1" >> /etc/resolv.conf
#==================================================================================================================================================
echo-green "restarting all services and enable for startup"  
service php5.6-fpm restart && service php7.0-fpm restart && service php7.1-fpm restart && service php7.2-fpm restart && service php7.3-fpm restart && service php7.4-fpm restart && service php8.0-fpm restart && service php8.1-fpm restart && service php8.2-fpm restart && service apache2 restart
systemctl enable apache2 && systemctl enable php5.6-fpm && systemctl enable php7.0-fpm &&  systemctl enable php7.1-fpm &&  systemctl enable php7.2-fpm && systemctl enable php7.3-fpm && systemctl enable php7.3-fpm && systemctl enable php7.3-fpm && systemctl enable php7.4-fpm && systemctl enable php8.0-fpm && systemctl enable php8.1-fpm && systemctl enable php8.2-fpm

echo -e "${GREEN}"
    cat <<splash
############################ Run following command manually without sudo for installing npm, node by nvm(node manager) ###########################
##################################################################################################################################################
##################################################################################################################################################
                        # curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash > /dev/null 2>&1
                        # nvm install 16
                        # nvm install 14
##################################################################################################################################################
##################################################################################################################################################
splash
    echo -e "${NC}"

}



