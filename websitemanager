#!/bin/bash
#
# Echoes a red message
#
echo-red() {
    echo -e "${RED}$1${NC}"
}

#
# Echoes a green message
#
echo-green() {
    echo -e "${GREEN}$1${NC}"
}

#
# Echoes a yellow message
#
echo-yellow() {
    echo -e "${YELLOW}$1${NC}"
}


#
# Shows info about the authors and the program
#
websitemanager-credits() {

    echo -e "${yellow}"
    cat <<splash
##############################################################################
##############################################################################
   # websitemanager Created by LKY Rajpurohit <jodhpur.laxman@gmail.com> #
##############################################################################
##############################################################################

splash
    echo -e "${NC}"

}
# ---------------------------------------------------------------------------- #
# GLOBAL VARIABLES (in script)
                                                 #
#CONFDIR="$CONFDIR"
CONFDIR="/opt/websitemanager"
DOMAIN=''
# red output
RED='\033[0;31m'
# green output
GREEN='\033[0;32m'
# Yellow outpu
YELLOW='\033[0;33m'
# No Color
NC='\033[0m'

POOL_TEMPLATE="$CONFDIR/phpini-templates/php-fpm.conf"
HAS_POOL_TEMPLATE="1"
USERNAME=""
STATUS="$CONFDIR/status" 
VERSION="1.4.3"
mysqlcred="$CONFDIR/mysql"
domainslist="$CONFDIR/domainlist"

websitemanager-credits
if [ "$EUID" -ne 0 ];then
     echo-red "Please execute as root or sudo "
     echo-red "else contact server administrator"	    
     exit 1
 fi


# ---------------------------------------------------------------------------- #
PV_OPT() {
echo-yellow "Please select the PHP version:"
select PHP_VERSION in "7.0" "7.1" "7.2" "7.3" "7.4" "8.0" "8.1" "8.2" "8.3" 
do
    case $PHP_VERSION in
        "7.0")
            echo "You selected the PHP 7.0"
            break
            ;;
        "7.1")
            echo "You selected the PHP 7.1."
            break
            ;;
       "7.2")
            echo "You selected the PHP 7.2."
            break
            ;;
        "7.3")
            echo "You selected the PHP 7.3."
            break
            ;;
        "7.4")
            echo "You selected the PHP 7.4."
            break
            ;;
        "8.0")
            echo "You selected the PHP 8.0."
            break
            ;;
        "8.1")
            echo "You selected the PHP 8.1."
            break
            ;;
        "8.2")
            echo "You selected the PHP 8.2."
            break
            ;;
        "8.3")
            echo "You selected the PHP 8.3."
            break
            ;;                                    
        *)
            echo "Invalid option. Please try again."
            ;;
    esac
done

if [ ! -f "/usr/bin/php$PHP_VERSION" ]; then
    cat <<splash
######################################################################################################################
######################################################################################################################
   # The requested PHP version $PV_OPT not installed, Please sun sudo systemmanager to install it then try again #
######################################################################################################################
######################################################################################################################

splash
exit 1
fi
}

#
# install script, instal option to add the script in bin directory
#
function mysqlcred(){
	if [ ! -f ${mysqlcred} ]; then
		echo-green "Setup Mysql account"
		echo-yellow "Please enter mysql USERNAME other then root"
	    	read mysqluser
		echo-yellow "Please enter mysql password"
		read mysqluserpasswd
                touch ${mysqlcred} 
                #save mysql credentials in file for further uses
		echo -e "${mysqluser}\n${mysqluserpasswd}" > ${mysqlcred}
	else
	    mysqluser=$(head -n 1 ${mysqlcred})
	    mysqluserpasswd=$(tail -n 1 ${mysqlcred})
fi
}
#
# List avaliable and enabled vhosts
#
websitemanager-list() {

    echo-yellow "Virtual hosts avaliable:"
    ls -1 "/etc/apache2/sites-available/"

    echo-green "Virtual hosts enabled:"
    ls -1 "/etc/apache2/sites-enabled/"

}

checkstatus(){
if [ ! -f  "$STATUS" ];then
touch ${STATUS}
fi
V_STATUS=$(head -n 1 ${STATUS})
if [ ! "$V_STATUS" = "$VERSION" ]; then
        git reset --hard origin/master > /dev/null
	echo-red "Upgrade required Please run sudo systemmanager"
	exit 1
else
       git reset --hard origin/master > /dev/null

fi
}
websitemanager-install() {
    if [ ! -d  "$CONFDIR" ] || [ ! -f  "$CONFDIR/websitemanager" ]; then
        [ -d "$CONFDIR" ] || mkdir "$CONFDIR"
        cp -r $(pwd)/. $CONFDIR
        ln -s -f $CONFDIR/websitemanager /usr/bin/websitemanager
        ln -s -f $CONFDIR/systemmanager /usr/bin/systemmanager

        echo-green "Script installed! use: sudo systemanager #for packages installation"
        echo-green "Script installed! use: sudo websitemanager # for websites vhosts creation"
    fi
    grep -q "ALL ALL = NOPASSWD: /usr/bin/cat, /usr/bin/update-alternatives, /usr/bin/websitemanager, /usr/bin/systemmanager, /bin/systemctl restart apache2, /bin/kill" /etc/sudoers
    if [[ $? != 0 ]] ; then
        echo "ALL ALL = NOPASSWD: /usr/bin/cat, /usr/bin/update-alternatives, /usr/bin/websitemanager, /usr/bin/systemmanager, /bin/systemctl restart apache2, /bin/kill" >> /etc/sudoers
    fi
    
    cd $CONFDIR
    git checkout .
    git remote update > /dev/null
    needUpdate=$(git status -uno | grep -c "git pull")
    checkstatus
    

}


#
# Validate template's existance
#
websitemanager-template() {

    echo-yellow "Verifying template..."
        if [ ! -f "$CONFDIR/vhosttemplates/$TEMPLATE.conf" ]; then
            echo-red "Template file $TEMPLATE not found!"
            exit 1
        fi
    	if [ $HAS_POOL_TEMPLATE = "1" ]; then
        echo-green "Verifying PHP pool template..."

        if [ ! -f "$CONFDIR/phpini-templates/php-fpm.conf" ]; then
                echo-red "$POOL_TEMPLATE not found!"
                exit 1
           
        fi
    fi

}

websitemanager-getuname() {
if [ "$USERNAME" == "" ]; then
    USERNAME=$(logname)
fi
}

# Creates a new vhost in sites available of apache
#
websitemanager-generate-vhost() {
    echo-green "Creating $DOMAIN virtual host."
    	
    APACHE_CONF="/etc/apache2/sites-available/$DOMAIN.conf"
    cp  $CONFDIR/vhosttemplates/$TEMPLATE.conf $APACHE_CONF
    
    sed -i 's#{USERNAME}#'$USERNAME'#g' $APACHE_CONF
    sed -i 's#{DOMAIN}#'$DOMAIN'#g' $APACHE_CONF

   if [ -z "$DOCUMENT_ROOT" ]; then
	    mkdir -p /home/$USERNAME/public_html/sites/$DOMAIN/
	    mkdir -p /home/$USERNAME/public_html/logs/$DOMAIN
            touch /home/$USERNAME/public_html/logs/$DOMAIN/{access.log,error.log}
	    chown -R $USERNAME:$USERNAME /home/$USERNAME/public_html/logs/$DOMAIN
	    chown -R $USERNAME:$USERNAME /home/$USERNAME/public_html/sites/$DOMAIN
    else
	        sed -i "s+/home/$USERNAME/public_html/sites/$DOMAIN+$DOCUMENT_ROOT+g" $APACHE_CONF
	    	mkdir -p $DOCUMENT_ROOT
		chown -R $USERNAME:$USERNAME $DOCUMENT_ROOT
		mkdir -p /home/$USERNAME/public_html/logs/$DOMAIN
		touch /home/$USERNAME/public_html/logs/$DOMAIN/{access.log,error.log}
		chown -R $USERNAME:$USERNAME /home/$USERNAME/public_html/logs/$DOMAIN
    fi
    	 
    if [ "$TEMPLATE" == "proxy" ]; then
    sed -i 's#{LOCALHOST:PORT}#'localhost:$PORT'#g' $APACHE_CONF
    else
    	sed -i 's#{PHP_VERSION}#'$PHP_VERSION'#g' $APACHE_CONF
    fi

    if [ $HAS_POOL_TEMPLATE == "1" ];then
        websitemanager-generate-php-pool;
    fi

    if [ ! -f $APACHE_CONF  ]; then
        echo-red "Fail, aborting..."
        exit 1
    fi

}

websitemanager-generate-php-pool() {
    echo-green "Creating PHP-FPM config for virtual host $DOMAIN."
    if [ -f /etc/php/$PHP_VERSION/fpm/pool.d/www.conf ]; then
       rm /etc/php/$PHP_VERSION/fpm/pool.d/www.conf 
       cp $POOL_TEMPLATE /etc/php/$PHP_VERSION/fpm/pool.d/$DOMAIN.conf   
    else 
         cp $POOL_TEMPLATE /etc/php/$PHP_VERSION/fpm/pool.d/$DOMAIN.conf
    fi        

    sed -i 's#{DOMAIN}#'$DOMAIN'#g' /etc/php/$PHP_VERSION/fpm/pool.d/$DOMAIN.conf
    sed -i 's#{PHP_VERSION}#'$PHP_VERSION'#g' /etc/php/$PHP_VERSION/fpm/pool.d/$DOMAIN.conf
    sed -i 's#{FPMUSERNAME}#'$USERNAME'#g' /etc/php/$PHP_VERSION/fpm/pool.d/$DOMAIN.conf
}

websitemanager-remove() {
    
    echo-red "Removing domain from /etc/hosts."
    sed -i '/'$DOMAIN'/d' /etc/hosts
    sed -i '/'www\.$DOMAIN'/d' /etc/hosts

    echo-yellow "Disabling  $DOMAIN virtual host."
    a2dissite $DOMAIN.conf

   if [ -f /etc/apache2/sites-available/$DOMAIN.conf ]; then 
      rm "/etc/apache2/sites-available/$DOMAIN.conf"
      service apache2 reload
      phparray=("7.0" "7.1" "7.2" "7.3" "7.4" "8.0" "8.1" "8.2" "8.3")
      for php in "${phparray[@]}"
	do
  		FPM_POOL_CONF="/etc/php/${php}/fpm/pool.d/$DOMAIN.conf"
                if [ -f FPM_POOL_CONF ]; then 
                  echo-red "Removing php-fpm file associaed with $DOMAIN"
                  FPM_POOL_CONF="/etc/php/${php}/fpm/pool.d/$DOMAIN.conf"
                  rm "$FPM_POOL_CONF"
                fi
	done
    
    fi
    exit 0
}

#
#  Adds the new vhost domain in hosts file
#
websitemanager-point-ip() {
    HOSTS_PATH="/etc/hosts"
    IP="127.0.0.1"
    line_to_check="$IP       $DOMAIN"

    echo-green "pointing $DOMAIN www.$DOMAIN   via /etc/hosts ..."
    
    if grep -Fxq "$line_to_check" "$HOSTS_PATH"; then
        echo-red "Domain already exists"
    else
        sed -i '1s/^/127.0.0.1       '$DOMAIN'\n/' $HOSTS_PATH
        sed -i '1s/^/127.0.0.1       'www\.$DOMAIN'\n/' $HOSTS_PATH
    fi

}

websitemanager-ssl-generate() {
cd "$CONFDIR/openssl"
./getcert.sh $DOMAIN >> /dev/null
}
#
# Reloads apache server and php-fpm, if required
#
websitemanager-enable-reload() {
    a2ensite $DOMAIN

    service apache2 reload

    #echo-green "Virtual host $DOMAIN created you can access via https://$DOMAIN"

    if [ $HAS_POOL_TEMPLATE = "1" ]; then
        service php$PHP_VERSION-fpm restart
        #echo-green "Pool for site with host and pool $CONFNAME enabled"
    fi


}

install_framework(){
if [ -z "$DOCUMENT_ROOT" ]; then
 if [ -z "$(ls -A $DOCUMENT_ROOT)" ]; then
    echo ""
 else
   echo-red "No framework specificed or directory not empty"
   exit 1
 fi
 fi
if [ "$FRAMEWORK" == "laravel" ]; then
    mysqlcred
    echo-green "================================="
    echo-green "downloading and installing latest Laravel version"
        export COMPOSER_ALLOW_SUPERUSER=1
 	composer create-project laravel/laravel "$DOCUMENT_ROOT"
	chown -R $USERNAME:$USERNAME $DOCUMENT_ROOT
    temp_DB=${DOMAIN%.*}
    temp_DB=$(sed "s/-/_/g" <<< "$temp_DB")
    DB=${USERNAME}_${temp_DB}
    echo-green "creating Database for site ${DB}"  
    sudo mysql -e "CREATE DATABASE $DB;"
    sed -i "s/laravel/${DB}/" $DOCUMENT_ROOT/.env
    sed -i "s/root/${mysqluser}/" $DOCUMENT_ROOT/.env
    sed -i "s/DB_PASSWORD=/DB_PASSWORD=${mysqluserpasswd}/" $DOCUMENT_ROOT/.env


elif [ "$FRAMEWORK" == "wordpress" ]; then
	cd /tmp
    echo-green "=================================="
	echo-green "downloading and installing wordpress"	
    curl https://wordpress.org/latest.tar.gz -o latest.tar.gz && tar -xzf latest.tar.gz -C "$DOCUMENT_ROOT" --strip-components=1
    
    temp_DB=${DOMAIN%.*}
    
    temp_DB=$(sed "s/-/_/g" <<< "$temp_DB")
    DB=${USERNAME}_${temp_DB} 
    echo "creating Database for site $DB"  
    sudo mysql -e "CREATE DATABASE $DB;"
    cp $DOCUMENT_ROOT/wp-config-sample.php $DOCUMENT_ROOT/wp-config.php
    sed -i "s/database_name_here/${DB}/" $DOCUMENT_ROOT/wp-config.php
    sed -i "s/username_here/${mysqluser}/" $DOCUMENT_ROOT/wp-config.php
    sed -i "s/password_here/${mysqluserpasswd}/" $DOCUMENT_ROOT/wp-config.php
    chown -R $USERNAME:$USERNAME "$DOCUMENT_ROOT"


fi
}

function savedomainslist(){
	if [ ! -f ${domainslist} ]; then
                touch ${domainslist} 
                #save domains in file for further uses
	elif  [ grep -n "$DOMAIN" ${domainslist} | cut -d: -f1 != "" ];then
               echo -e "${DOMAIN}|${$PHP_VERSION}" > ${domains}
        else 
              sed -i 's/^${DOMAIN}|7.0/test-123.com|${$PHP_VERSION}/g' ${DOMAIN} //need to review part
        fi
}

function setupphpcli(){
if [ ! "$TEMPLATE" == "node.conf" ];then
	echo-green "Setup default php cli version to php$PHP_VERSION"
	update-alternatives --set php /usr/bin/php$PHP_VERSION > /dev/null 2>&1
	echo-yellow "you can use following commond to set default php CLI version via terminal"
	echo-green "sudo update-alternatives --set php /usr/bin/phpversion"
fi
}
verifyuserinput(){
clear    
echo-red "=============================================================================="
echo-green
echo-green "Domain: $DOMAIN"
echo-green "Vhost Template: $TEMPLATE"
if [ ! "$TEMPLATE" == "proxy"  ]; then
echo-green "PHP Version: $PHP_VERSION"
HAS_POOL_TEMPLATE="1"
DOCUMENT_ROOT=/home/$USERNAME/public_html/sites/$DOMAIN/
echo-green "DOCUMENT_ROOT: $DOCUMENT_ROOT"
else
echo-green "PORT: $PORT"
fi
if [ -z "$FRAMEWORK"  ]; then
echo-yellow "Framework: Not Selected"
else
echo-green "Install Framework: $FRAMEWORK"
fi
echo-green "USERNAME: $USERNAME";
echo-green
echo-red "=============================================================================="
read -p "Would you like to create domain/site with above configuration (y/n)?" answer
case ${answer:0:1} in
    y|Y )
        echo ""
    ;;
    * )
       exit 1
    ;;
esac
}
websitemanager-install
domain-name(){

echo-yellow "Please enter the domain name:"
    read DOMAIN

    if [[ $DOMAIN =~ ^([a-zA-Z0-9]([a-zA-Z0-9\-]{0,61}[a-zA-Z0-9])?\.)+[a-zA-Z]{2,}$ ]]; then
        echo ""
    else
        echo "Invalid domain name: $DOMAIN"
        exit 1
    fi

}

#=========================================================================================
echo-yellow "Select an option"
    select ACTION in "add" "list" "delete"
    do
        case $ACTION in
            "add")
                echo -e "You have selected add.\n"
                break
                ;;
            "list")
                echo -e "You selected list.\n"
                break
                ;;
            "delete")
                echo -e "You selected delete.\n"
                break
                ;;    
            *)
                echo -e "Invalid option. Please try again.\n"
                ;;
        esac
    done

if [ $ACTION = "add" ]; then
domain-name
echo-yellow "Please select the Apache Vhost template:"
select TEMPLATE in "default" "wordpress" "laravel" "proxy"
do
    case $TEMPLATE in
        "default")
            echo -e "You selected the default template.\n"
            break
            ;;
        "wordpress")
            echo -e "You selected the wordpress template.\n"
            break
            ;;    
        "laravel")
            echo -e "You selected the Laravel template.\n"
            break
            ;;
        "proxy")
            echo -e "You selected the proxy template(used for Node.js, NextJs, VueJs, etc).\n"
            break
            ;;
        *)
            echo -e "Invalid option. Please try again.\n"
            ;;
    esac
done
if [ ! $TEMPLATE == "proxy" ] && [ ! $TEMPLATE == "default" ]; then
    echo-yellow "Would you like to auto install framework?"
    select FRAMEWORK_OPT in "Yes" "No"
    do
        case $FRAMEWORK_OPT in
            "Yes")
                echo -e "You have selected Yes.\n"
                break
                ;;
            "No")
                echo -e "You selected NO.\n"
                break
                ;;
            *)
                echo -e "Invalid option. Please try again.\n"
                ;;
        esac
    done
fi

if [ "$FRAMEWORK_OPT" = "Yes" ] && [ "$TEMPLATE" = "wordpress" ]; then 
    FRAMEWORK="wordpress"   
elif [ "$FRAMEWORK_OPT" = "Yes" ] && [ "$TEMPLATE" = "laravel" ]; then
    FRAMEWORK="laravel"
fi


if [ ! $TEMPLATE = "proxy" ]; then
    PV_OPT
fi
else
    PORT=3000

fi


#websitemanager-update;
websitemanager-getuname
verifyuserinput
websitemanager-template;
websitemanager-generate-vhost;
websitemanager-point-ip;
websitemanager-ssl-generate;
websitemanager-enable-reload;
setupphpcli;
install_framework;
elif [ $ACTION = "list" ]; then
     websitemanager-list
else 
    websitemanager-list
    domain-name
    websitemanager-remove   
fi


