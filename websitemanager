#!/bin/bash

# ---------------------------------------------------------------------------- #
# GLOBAL VARIABLES (in script)                                                 #
# ---------------------------------------------------------------------------- #

CONFDIR="/opt/websitemanager"
DOMAIN=''
# red output
RED='\033[0;31m'
# green output
GREEN='\033[0;32m'
# Yellow outpu
YELLOW='\033[0;33m'
# No Color
NC='\033[0m'
POOL_TEMPLATE="/opt/websitemanager/phpini-templates/php-fpm.conf"
HAS_POOL_TEMPLATE="0"
USERNAME=""
# ---------------------------------------------------------------------------- #
# FUNCTIONS                                                                    #
# ---------------------------------------------------------------------------- #

#
# Echoes a red message
#
echo-red() {
    echo -e "${RED}$1${NC}"
}

#
# Echoes a green message
#
echo-green() {
    echo -e "${GREEN}$1${NC}"
}

#
# Echoes a yellow message
#
echo-yellow() {
    echo -e "${YELLOW}$1${NC}"
}


#
# Shows info on the authors and the program
#
websitemanager-credits() {

    echo -e "${GREEN}"
    cat <<splash
##############################################################################
##############################################################################
# websitemanager v1.3.0 Created by LKY Rajpurohit <qualdev.laxman@gmail.com> #
##############################################################################
##############################################################################

splash
    echo -e "${NC}"

}

#
# Verifies sudo 
#
websitemanager-verify-sudo() {

    if [ "$EUID" -ne 0 ]
      then echo-red "Please execute as root eg: sudo"
      echo-red "else contact server administrator"	    
      exit 1
    fi

}

#
# Shows usage information to user
#
websitemanager-usage() {

    echo -e "${YELLOW}"
    cat <<"USAGE"

Uso: websitemanager [options] <name of vhost>
    -h		|--help   help
    -d          domain of the project eg: site.dev
    -l          list all vhosts
    -t          set vhost template like default. laravel, nodejs
    -pv         set php version vhost
    -dr		custom document root for pointing the domain to existing folder
    -p          sets the application's port for nodejs/proxy
    -u          set domain for the system user like you(anil, vijay, nitin)  
    -install    install the script globally
    -update     Autoupdate script if is needed


USAGE

    echo "Examples:"
    echo
    echo-yellow "Example: for creating a vhost domain \"sitename.dev\" with the template \"laravel\" and php version 7.2 use below command"
    echo-green "sudo websitemanager -d sitename.dev -t default/laravel/node -f laravel/wordpress -pv 7.2  -u username #without -pv it will set php8.0 as default php version, if framework not defined it will not install it"
    echo-red "Explanation of flags"
    echo-green "-d domainname"
    echo-green "-pv php version i.e 7.1, 7.2"
    echo-green "-dr document root of domain i.e /full_path_of_existing_folder"
    echo-green "-p port only applicable if -t is node "
    echo-green "-t apache vhost template i.e default, laravel, node "
    echo-green "-f install framework while creating vhost i.e laravel, wordpress"
	

    echo -e "${NC}"
    exit 0

}

#
# install script, instal option to add the script in bin directory
#
websitemanager-install() {
    websitemanager-verify-sudo;

    if [ ! -e  "$CONFDIR" ]; then
        mkdir "$CONFDIR"
    fi

    #cp template.conf template-phpfpm.conf template-pool.conf $CONFDIR
    cp -r $(pwd)/. $CONFDIR
    ln -s -f $CONFDIR/websitemanager /usr/bin/websitemanager
    ln -s -f $CONFDIR/systemmanager /usr/bin/systemmanager

    echo-green "Script installed! use: websitemanager -h"

    exit 0

}

#
# Update Vhost
#
websitemanager-update() {
    websitemanager-verify-sudo;
    cd /opt/websitemanager
    git checkout .
    git remote update > /dev/null
    needUpdate=$(git status -uno | grep -c "git pull")

    if [ "$needUpdate" -ne 0 ]; then
        echo-yellow "Need update..."
        git reset --hard origin/master > /dev/null
        echo-green "Update complete!"
        echo-red "Please re-run same command"
	if [ ! -f /var/spool/cron/crontabs/root ];then
   		touch /var/spool/cron/crontabs/root
	fi
  	mkdir /opt/network/
  	ln -s /opt/network/internet.sh /usr/bin/internet 
	cp /opt/websitemanager/network/internet.sh /opt/network/internet.sh && chmod +x /opt/network/internet.sh   
	if ! grep -q -F /usr/bin/internet /var/spool/cron/crontabs/root; then
    	(crontab -l 2>/dev/null; echo "* * * * * /usr/bin/internet chnage") | crontab -
	fi
        exit 0
    else
        echo-green "Local repo is already updated!"
    fi
}



#
# List avaliable and enabled vhosts
#
websitemanager-list() {

    echo-yellow "Virtual hosts avaliable:"
    ls -1 "/etc/apache2/sites-available/"

    echo-green "Virtual hosts enabled:"
    ls -1 "/etc/apache2/sites-enabled/"

    exit 0

}



#
# Validate template's existance
#
websitemanager-template() {
    websitemanager-verify-sudo;
    echo-green "Verifying template..."


        if [ ! -f "/opt/websitemanager/vhosttemplates/$TEMPLATE" ]; then
            echo-red "$TEMPLATE not found!"
            exit 1
        fi
    	if [ $HAS_POOL_TEMPLATE = "1" ]; then
        echo-green "Verifying pool template..."

        if [ ! -f "/opt/websitemanager/phpini-templates/php-fpm.conf" ]; then
                echo-red "$POOL_TEMPLATE not found!"
                exit 1
           
        fi
    fi

}

websitemanager-getusername() {
websitemanager-verify-sudo;
if [ "$USERNAME" == "" ]; then
    username=$(logname)
else
    username="$USERNAME"
fi
}

sudoers_user() {
websitemanager-verify-sudo;
if ! grep -q "$(logname)" /etc/sudoers; then
    echo "$(logname) ALL = NOPASSWD: /bin/systemctl restart apache2.service, /usr/bin/websitemanager, /usr/bin/systemmanager,/usr/bin/internet /bin/kill" >> /etc/sudoers
    
else
    echo-green "user account already exists in sudoers";
fi
}

#
# Creates a new vhost in sites available of apache
#
websitemanager-generate-vhost() {
    websitemanager-verify-sudo;
    echo-green "Creating $DOMAIN virtual host."
    	
    APACHE_CONF="/etc/apache2/sites-available/$DOMAIN.conf"

    cp  $CONFDIR/vhosttemplates/$TEMPLATE $APACHE_CONF
    sed -i 's#user#'$username'#g' $APACHE_CONF
    sed -i 's#domain#'$DOMAIN'#g' $APACHE_CONF
    if [ -z "$DOCUMENT_ROOT" ]; then
    mkdir -p /home/$username/public_html/sites/$DOMAIN/
    mkdir -p /home/$username/public_html/logs/$DOMAIN
    chown -R $username:$username /home/$username/public_html/logs/$DOMAIN
    chown -R $username:$username /home/$username/public_html/sites/$DOMAIN
    else
        sed -i "s+/home/user/public_html/sites/domain+$DOCUMENT_ROOT+g" $APACHE_CONF
    	mkdir -p /home/$username/public_html/logs/$DOMAIN
	chown -R $username:$username /home/$username/public_html/logs/$DOMAIN
    fi
    	 
    if [ "$TEMPLATE" == "node.conf" ]; then
    sed -i 's#port#'$PORT'#g' $APACHE_CONF
    else
    	sed -i 's#php_version#'$PHP_VERSION'#g' $APACHE_CONF
    fi

    if [ $HAS_POOL_TEMPLATE = "1" ]; then
        websitemanager-generate-pool;
    fi

    if [ ! -f $APACHE_CONF  ]; then
        echo-red "Fail, aborting..."
        exit 1
    fi

}

websitemanager-generate-pool() {
    websitemanager-verify-sudo;
    echo-green "Creating PHP-FPM config for virtual host."
    cp $POOL_TEMPLATE /etc/php/$PHP_VERSION/fpm/pool.d/$DOMAIN.conf
    if [ -z "$DOCUMENT_ROOT" ]; then
    sed -i 's#domain#'$DOMAIN'#g' /etc/php/$PHP_VERSION/fpm/pool.d/$DOMAIN.conf
    else
    sed -i "s+/home/userfpm/public_html/sites/domain+$DOCUMENT_ROOT+g" /etc/php/$PHP_VERSION/fpm/pool.d/$DOMAIN.conf
    sed -i 's#domain#'$DOMAIN'#g' /etc/php/$PHP_VERSION/fpm/pool.d/$DOMAIN.conf
    fi
    sed -i 's#php_version#'$PHP_VERSION'#g' /etc/php/$PHP_VERSION/fpm/pool.d/$DOMAIN.conf
    sed -i 's#userfpm#'$username'#g' /etc/php/$PHP_VERSION/fpm/pool.d/$DOMAIN.conf
}

websitemanager-remove() {
    websitemanager-verify-sudo;
    FPM_POOL_CONF="/etc/$PHP_VERSION/fpm/pool.d/$CONFNAME"

    echo-yellow "removing domain from /etc/hosts."
    sed -i '/'$DOMAIN'/d' /etc/hosts

    echo-yellow "disabling  $DOMAIN virtual host."
    a2dissite $CONFNAME

    rm "/etc/apache2/sites-available/$CONFNAME"
    service apache2 reload

    if [ -f "$FPM_POOL_CONF" ]; then
        echo-yellow "removing php-fpm associaed with $DOMAIN"
        rm "$FPM_POOL_CONF"
    fi

    exit 0

}

#
#  Adds the new vhost domain in hosts file
#
websitemanager-point-ip() {
    websitemanager-verify-sudo;
    HOSTS_PATH="/etc/hosts"

    echo-green "pointing $DOMAIN  via /etc/hosts ..."

    if grep -F "$DOMAIN" $HOSTS_PATH
    then
        echo-yellow "Domain already exists"
    else
        sed -i '1s/^/127.0.0.1       '$DOMAIN'\n/' $HOSTS_PATH
    fi

}

websitemanager-ssl-generate() {
cd "$CONFDIR/openssl"
./getcert.sh $DOMAIN >> /dev/null
}
#
# Reloads apache server and php-fpm, if required
#
websitemanager-enable-reload() {
    websitemanager-verify-sudo;
    a2ensite $DOMAIN

    service apache2 reload

    #echo-green "Virtual host $DOMAIN created you can access via https://$DOMAIN"

    if [ $HAS_POOL_TEMPLATE = "1" ]; then
        service php$PHP_VERSION-fpm restart
        #echo-green "Pool for site with host and pool $CONFNAME enabled"
    fi


}

install_framework(){
 if [ -z "$DOCUMENT_ROOT" ]; then
 if [ -z "$(ls -A /home/$username/public_html/sites/$DOMAIN)" ]; then
    echo "verify directory is Empty"
 else
    echo-red "warning: document root directory is not empty, exiting installer"
    exit 1
 fi
 fi
    
if [ "$FRAMEWORK" == "laravel" ]; then
    echo-green "================================="
    echo-green "downloading and installing latest Laravel version"	
 	composer create-project laravel/laravel "/home/$username/public_html/sites/$DOMAIN"
	chown -R $username:$username "/home/$username/public_html/sites/$DOMAIN"
    temp_DB=${DOMAIN%.*}
    #DB=$(echo ${username}'_'${temp_DB})
    DB=${username}_${temp_DB} 
    sudo mysql -e "CREATE DATABASE $DB;"
elif [ "$FRAMEWORK" == "wordpress" ]; then
	cd /tmp
    echo-green "=================================="
	echo-green "downloading and installing wordpress"	
    curl https://wordpress.org/latest.tar.gz -o latest.tar.gz && tar -xzf latest.tar.gz -C "/home/$username/public_html/sites/$DOMAIN" --strip-components=1
    
    temp_DB=${DOMAIN%.*}
    #DB=$(echo ${username}'_'${temp_DB})
    DB=${username}_${temp_DB} 
    sudo mysql -e "CREATE DATABASE $DB;"
    cp /home/$username/public_html/sites/$DOMAIN/wp-config-sample.php /home/$username/public_html/sites/$DOMAIN/wp-config.php
    sed -i 's/database_name_here/'$DB'/' /home/$username/public_html/sites/$DOMAIN/wp-config.php
    sed -i 's/username_here/qualdev/' /home/$username/public_html/sites/$DOMAIN/wp-config.php
    sed -i 's/password_here/P@q2w3efg/' /home/$username/public_html/sites/$DOMAIN/wp-config.php
    chown -R $username:$username "/home/$username/public_html/sites/$DOMAIN"
else 
	echo-yellow "No framework passed for auto installation"	
fi
}

verifyuserinput(){
echo-green "=============================================================================="
echo-green
echo-green "Username: $username";
echo-green "Domain: $DOMAIN"
echo-green "Template: $TEMPLATE"
if [ -z "$FRAMEWORK"  ]; then
echo-green "Framework: Not Defined"
else
echo-green "Framework: $FRAMEWORK"
fi
if [ -z "$DOCUMENT_ROOT" ]; then
echo-yellow "Document root: '/home/$username/public_html/sites/$DOMAIN'"
else
    echo-yellow "Custom Document root: $DOCUMENT_ROOT"
fi    
if [ "$Framework" == 'node' ]; then
echo-green "Port: $PORT"  # this will work if template is node
fi
echo-green "Php_Version: $PHP_VERSION"
echo-green
echo-green "=============================================================================="
echo-green
echo-red "" 
#read answer
read -p "Would you like to create domain/site with above configuration (y/n)?" answer
case ${answer:0:1} in
    y|Y )
        echo Yes
    ;;
    * )
       exit 1
    ;;
esac
}

#
# Initial script
#
while [ $1 ]; do
    case "$1" in
        '-l') websitemanager-list;;
        '-h'|'--help') websitemanager-usage;;
        '-t') TEMPLATE="$2.conf";;
	'-f') FRAMEWORK="$2";;
        '-pv')
            PHP_VERSION="$2"
            HAS_POOL_TEMPLATE="1"
            ;;
	'-dr') DOCUMENT_ROOT="$2";;    
        '-p') PORT="$2";;    
        '-d') DOMAIN="$2";;
        '-u') USERNAME="$2";;
        '-install') websitemanager-install;;
        '-update') websitemanager-update;;
    esac
    shift
done

#
# Verify the parameters usage
#
if [ "$DOMAIN" == "" ]; then
    echo-red "You need to specify the options -d "
    websitemanager-usage;
    exit 0;
fi

if [ "$PHP_VERSION" == "" ]; then
    PHP_VERSION="8.0"
fi

if [ "$TEMPLATE" == "" ]; then
    TEMPLATE="default.conf"
fi
if [ "$FRAMEWORK" == "laravel" ]; then
    TEMPLATE="laravel.conf"
fi
if [ "$FRAMEWORK" == "node" ]; then
    TEMPLATE="node.conf"
if [ "$PORT" == "" ]; then
    PORT="3000"
fi
fi
#
# Do vhost creation process
#
websitemanager-update;
sudoers_user;
websitemanager-getusername;
verifyuserinput;
websitemanager-template;
websitemanager-generate-vhost;
websitemanager-generate-pool;
websitemanager-point-ip;
websitemanager-ssl-generate;
websitemanager-enable-reload;
install_framework;
exit 0
